const MONEY = [
  {name:"PENNY", value: 0.01},
  {name:"NICKEL", value: 0.05},
  {name:"DIME", value:0.1},
  {name:"QUARTER", value:0.25},
  {name:"ONE", value:1},
  {name:"FIVE", value:5},
  {name:"TEN", value:10},
  {name:"TWENTY", value:20},
  {name:"ONE HUNDRED", value:100}
  ];

function checkCashRegister(price, cash, cid) {
  //get change
  let totalChange = cash - price;
  let change = {status: undefined, change:[]};
  let gaveAll = 0;
  //reverse the cid
  cid.reverse();
  for(let m of cid) {
    //give all the coins of this type
    if(m[1] <= totalChange) {
      totalChange -= m[1];
      //if there are not coins skip
      if(m[1] > 0)
        change.change.push(m);
      gaveAll++;
    }
    else {
      //find the value of the coin
      let v = MONEY.find(n => n.name == m[0])
      //calculate how much you can give with this coin
      let q = parseInt(totalChange/v.value)*v.value
      if(totalChange - q > 0.005 && totalChange - q - v.value > -0.005)
        q += v.value;
      //less than epsilon means no coin
      if(q > 0.005)
        change.change.push([v.name, q])
      totalChange -= q;
    }
  }
  //taking it back to original
  cid.reverse();
  //epsilon for the change
  if(totalChange > 0.005) {
    change.status = "INSUFFICIENT_FUNDS";
    change.change = [];
  }
  else {
    if(gaveAll == MONEY.length) {
      change.status = "CLOSED";
      change.change = cid;
    }
    else
      change.status = "OPEN";
  }
  return change;
}

console.log(checkCashRegister(19.5, 20, [["PENNY", 0.5], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]]));
